createUser:
  handler: src/createUser/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - sqs:SendMessage
        - sns:Publish
      Resource:
        - Fn::ImportValue: core-service-stack-dev-UserNotifyTopic
        - Fn::GetAtt:
          - MyAppDatabase
          - Arn
  environment:
    TABLE_NAME:
      Ref: MyAppDatabase
    SNS_ARN:
      Fn::ImportValue: core-service-stack-dev-UserNotifyTopic
  events:
    - http:
        method: post
        path: /v1/users

getUser:
  handler: src/getUser/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
      Resource:
        Fn::GetAtt:
          - MyAppDatabase
          - Arn
  environment:
    TABLE_NAME:
      Ref:  MyAppDatabase
  events:
    - http:
        method: get
        path: /v1/users

editUser:
  handler: src/editUser/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
      Resource:
      - Fn::ImportValue: core-service-stack-dev-UserNotifyTopic
      - Fn::GetAtt:
          - MyAppDatabase
          - Arn
  environment:
    SNS_ARN:
      Fn::ImportValue: core-service-stack-dev-UserNotifyTopic
    TABLE_NAME:
      Ref: MyAppDatabase
  events:
    - http:
        method: put
        path: /v1/users
        # authorizer: 
        #   type: COGNITO_USER_POOLS
        #   authorizerId: 
        #     Ref: myAuthorizer


uploadProfilePicture:
  handler: src/uploadProfilePicture/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::my-awesome-unique-long-s3-bucket-name-20230808/'
            - Ref: AWS::AccountId
            - '/*'
  events:
    - http:
        method: post
        path: /v1/upload-profile-picture
        # authorizer: 
        #   type: COGNITO_USER_POOLS
        #   authorizerId: 
        #     Ref: myAuthorizer



# deleteUser:
#   handler: src/users/deleteUser/handler.default
#   iamRoleStatements:
#     - Effect: Allow
#       Action:
#         - dynamodb:DeleteItem
#       Resource:
#         Fn::GetAtt:
#           - MyAppDatabase
#           - Arn
#   environment:
#     TABLE_NAME:
#       Ref:  MyAppDatabase
#   events:
#     - http:
#         method: delete
#         path: /v1/users